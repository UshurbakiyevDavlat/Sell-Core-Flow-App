services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - core_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: unless-stopped
    volumes:
      - ./docker/create-kafka-topics.sh:/docker/create-kafka-topics.sh
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    entrypoint: [ "bin/bash",  "/docker/create-kafka-topics.sh" ]
    networks:
      - core_network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
    depends_on:
      - db
      - redis
      - kafka
    ports:
      - 8080:8080
    networks:
      - core_network
    env_file:
      - .env

  http:
    image: nginx:1.27.3
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/templates
    env_file:
      - .env
    depends_on:
      - app
    networks:
      - core_network
  db:
    image: postgres:15
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: sell_core
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - core_network

  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - core_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    networks:
      - core_network

networks:
  core_network:
    driver: bridge
